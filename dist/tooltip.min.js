const t={left:"left",right:"right",above:"above",below:"below"},e=["rtl"===document.dir?t.left:t.right,"rtl"===document.dir?t.right:t.left,t.above,t.below];let n=e;export{t as POSITIONS,o as tooltip,s as setPositionFallbacks};function o(t,e){}function s(...o){(n=o.filter(e=>e in t)).push(...e.filter(t=>n.indexOf(t)<0))}const i=document.createElement("template");i.innerHTML="\n\t<style>\n\t\t:host {\n\t\t\tposition: fixed;\n\t\t\tpadding: 24px;\n\t\t\tdisplay: none;\n\t\t\tz-index: 9999;\n\t\t\toverflow: hidden;\n\t\t\tborder-radius: 12px;\n\t\t\tbox-shadow: 0 0 12px rgba(100,100,100,0.5);\n\t\t\ttransition: all 333ms;\n\t\t}\n\n\t\t:host(.pre-shown) {\n\t\t\tdisplay: block;\n\t\t\topacity: 0;\n\t\t}\n\n\t\t:host(.shown) {\n\t\t\tdisplay: block;\n\t\t\topacity: 1;\n\t\t}\n\n\t\t:host(.inverse) {\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #000;\n\t\t\tbox-shadow: none;\n\t\t}\n\t</style>\n\n\t<slot></slot>\n",customElements.define("tool-tip",class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(i.content.cloneNode(!0))}connectedCallback(){const t=this.dataset.targetId,e=this.dataset.targetClass;if(!t&&!e)return void console.error("tooltip has nor target-id neither target-class defined, this tooltip will not be used");const n=this.getRootNode().querySelectorAll(t?"#"+t:"."+e);n.length?n.forEach(t=>{t.addEventListener("mouseenter",t=>this.show(t.target)),t.addEventListener("mouseleave",t=>this.hide())}):console.error('failed to match any target element by id "'+t+'", this tooltip will not be used')}show(t){this.classList.add("pre-shown");const e=this.getTargetRect(t),n={top:e.y+e.height/2-this.offsetHeight/2+"px",left:e.x+e.width+12+"px"};Object.assign(this.style,n),this.classList.replace("pre-shown","shown")}hide(){this.classList.remove("shown")}getTargetRect(t){return t.getBoundingClientRect()}});